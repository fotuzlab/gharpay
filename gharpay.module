<?php

/**
 * @file
 * Gharpay module.
 */

// Implement hook_requirements();

// Define constants.
define('CREATE_ORDER_URL', 'http://services.gharpay.in/rest/GharpayService/createOrder');

// @TODO: Add a check here.
// Not storing username and password in database
// for better security.
// Let this activity be manual.
// Later we can add it in .install workflow like Drupal.
require_once(DRUPAL_ROOT . "/sites/all/libraries/gharpay/GharpayAPI.php");

/**
 * Implements hook_permission().
 */
function gharpay_permission() {
  return array(
    'configure_gharpay' => array(
      'title' => 'Configure Gharpay',
    ),
    'access_gharpay' => array(
      'title' => 'Access Gharpay',
    ),
  );
}

/**
 * Implements hook_menu().
 */
function gharpay_menu() {

  $items['admin/config/services/gharpay'] = array(
    'title' => t('Configure Gharpay'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gharpay_config_form'),
    'access arguments' => array('configure_gharpay'),
    'file' => 'gharpay.admin.inc',
    'description' => 'Configure settings for Gharpay.',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['gharpay/order/create'] = array(
    'title' => t('Create order'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gharpay_create_order_form'),
    'access arguments' => array('access_gharpay'),
    'file' => 'gharpay.create.inc',
    'type' => MENU_CALLBACK,
  );
  $items['gharpay/services/cities'] = array(
    'title' => t('Available cities'),
    'page callback' => 'gharpay_available_cities',
    'access arguments' => array('access_gharpay'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Check if Gharpay PHP library is available or not.
 */
function gharpay_library_status() {
  // Here we use functions provided by libraries module
  // so that it seemlessly integrates with multisite installation and
  // dependency is catered well.
  if (($library = libraries_detect('gharpay')) && !empty($library['installed'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

function gharpay_available_cities() {
  $gharpay = new GharpayAPI();
  $cities = $gharpay->getCityList();
  $form = array();
  foreach ($cities as $key => $city) {
    $form[$city] = array(
        '#type' => 'fieldset',
        '#title' => t('@city', array('@city' => $city)),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
    $form[$city][] = array(
        '#type' => 'select',
        '#title' => t('Available pincodes'),
        '#options' => $gharpay->getPincodesInCity($city),
      );
  }
  return $form;
}

/**
 * Create an array of client details to pass to
 * createOrder() function provided by Gharpay API
 * @param
 *   an array of user submitted form. Check API documentation for mandatory fields.
 * @return
 *   an array to pass to createOrder() function.
 */
function gharpay_create_order_client_details($order) {
  // Create address.
  $address = array();
  $address[] = $order['delivery_company'];
  // Should have already passed validation.
  $address[] = $order['delivery_street1'];
  $address[] = $order['delivery_street2'];
  // Should have already passed validation.
  $address[] = $order['delivery_city'];
  // Should have already passed validation.
  $address[] = $order['delivery_postal_code'];

  // Convert address into a string
  $address_string = implode(', ', $address);

  $array = array();
  // Mandatory fields.
  // Should have already passed validation.
  $array = array(
      'firstName' => $order['delivery_first_name'],
      'contactNo' => $order['delivery_phone'],
      'address' => $address_string,
    );

  // These are optional fields.
  // They did not go under validation earlier.
  if ($order['primary_email']) {
    $array['email'] = $order['primary_email'];
  }
  if ($order['delivery_last_name']) {
    $array['lastName'] = $order['delivery_last_name'];
  }
  if ($order['prefix']) {
    $array['prefix'] = $order['prefix'];
  }

  return $array;
}

/**
 * Create an array of order details to pass to
 * createOrder() function provided by Gharpay API
 * @param
 *   an array of user submitted form. Check API documentation for mandatory fields.
 * @return
 *   an array to pass to createOrder() function.
 */
function gharpay_create_order_order_details($order) {

  $array = array();
  // Mandatory fields.
  $array = array(
      // Should have already passed validation.
      'pincode' => $order['delivery_postal_code'],
      // Ubercart validation assumed.
      'orderAmount' => $order['order_total'],
      // Ubercart validation assumed.
      'clientOrderID' => $order['order_id'],
      // @TODO
      // Get delivary date from order.
      'deliveryDate' => '20-05-2013',
    );

  // These are optional fields.
  // They did not go under validation earlier.
  if ($order['template_id']) {
    $array['template_id'] = $order['template_id'];
  }
  if ($order['payment_mode']) {
    $array['payment_mode'] = $order['payment_mode'];
  }

  // @TODO
  // Leaving Additional information intentionally.
  // This would be added via a hook later.

  return $array;
}

/**
 * Create an array of product details to pass to
 * createOrder() function provided by Gharpay API
 * @param
 *   an array of user submitted form. Check API documentation for mandatory fields.
 * @return
 *   an array to pass to createOrder() function if products are available
 *   FALSE otherwise.
 */
function gharpay_create_order_product_details($order) {
  $array = array();
  // Check if products exist.
  if ($order['products']) {
    foreach ($order['products'] as $op_id => $product) {
      $array[$op_id] = array(
          'orderId' => $product->order_id,
          'productID' => $product->order_product_id,
          'productQuantity' => $product->qty,
          'unitCost' => $product->price,
          'productDescription' => gharpay_get_order_description($product->nid),
        );
    }
    return $array;
  }
  else {
    return FALSE;
  }
}

/**
 * Ubercart does not provide product description in $order variable
 * though node id is available.
 * This function would extract node body field of the product node.
 * @param
 *   Node id of product.
 * @return
 *   Body field value of node.
 */
function gharpay_get_order_description($nid) {
  return db_query("SELECT body_value FROM {field_data_body} WHERE entity_id = :nid", array(':nid' => $nid))->fetchField();
}